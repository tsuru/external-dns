name: Go

on:
  push:
    branches: [ master, "feat/globodns-provider" ]

  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install CI
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Install additional CI for nektos/act
      run: |
            apt update
            apt install -y make gcc libc-dev git
      if: github.actor == 'nektos/act'

    - name: Lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.45.2
        make lint

    - name: Test
      run: make test

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov
      if: github.actor != 'nektos/act'

  publish:
    name: Build and Publish container images
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        push: true
        build-args: |
          ARCH=amd64
        tags: |
          tsuru/external-dns:latest
          tsuru/external-dns:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

